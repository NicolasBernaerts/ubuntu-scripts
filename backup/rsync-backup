#!/usr/bin/env bash
# 
# Script to backup data on a Rsync server
#
# Depends on rsync and zenity
# 
# 05/11/2012, V1.0 - Creation by Nicolas Bernaerts
# 02/04/2015, V2.0 - Externalize parameters

# configuration file
CONF_FILE="$HOME/.rsync-backup.conf"

# path to awk script, in the same directory as current script
AWK_SCRIPT=$(dirname $(readlink -f $0))"/rsync.awk"

# check rsync and configuration file availability
command -v rsync >/dev/null 2>&1 || { zenity --error --text="Please install rsync"; exit 1; }
[ -f "$CONF_FILE" ] || { zenity --error --text="Please create configuration file ${CONF_FILE}"; exit 1; }

# load parameters : data
BACKUP_SRC=$(cat $CONF_FILE | grep "folders=" | cut -d"=" -f2-)

# load parameters : server
BACKUP_SRV=$(cat $CONF_FILE | grep "server=" | cut -d"=" -f2-)
BACKUP_PRT=$(cat $CONF_FILE | grep "port=" | cut -d"=" -f2-)
BACKUP_OPT=$(cat $CONF_FILE | grep "options=" | cut -d"=" -f2-)
  
# load parameters : account
BACKUP_MOD=$(cat $CONF_FILE | grep "module=" | cut -d"=" -f2-)
BACKUP_USR=$(cat $CONF_FILE | grep "user=" | cut -d"=" -f2-)
BACKUP_PWD=$(cat $CONF_FILE | grep "password=" | cut -d"=" -f2-)

# set begining time
TIME_BEGIN=$(date +%s)

# create temporary password file
TMP_PASSWORD=/tmp/rsync-backup.pwd
echo $BACKUP_PWD > $TMP_PASSWORD
chmod 0700 $TMP_PASSWORD

# split data directories chain in an array
IFS="|" read -a ARR_DIRECTORY <<< "$BACKUP_SRC"

# loop thru the data directories
NUM_DIRECTORY=${#ARR_DIRECTORY[@]}
for (( i=0; i<$NUM_DIRECTORY; i++ ));
do
  # current directory to be backed-up
  DIRECTORY=${ARR_DIRECTORY[$i]}

  # progress dialog title
  INDEX=$(echo "$i + 1" | bc)
  TITLE="$INDEX/$NUM_DIRECTORY - Backup of $DIRECTORY"

  # backup current directory
  rsync ${BACKUP_OPT} --password-file=${TMP_PASSWORD} --port=${BACKUP_PRT} ${DIRECTORY} ${BACKUP_USR}@${BACKUP_SRV}::${BACKUP_MOD} | awk -f ${AWK_SCRIPT} | zenity --progress --width=400 --auto-close --auto-kill --title "$TITLE"
done

# remove temporary password file
rm $TMP_PASSWORD

# calculate execution time
TIME_END=$(date +%s)
TIME_TOTAL=$(($TIME_END-$TIME_BEGIN))

# end of backup notification
zenity --notification --text="Backup finished in $TIME_TOTAL seconds" &
